name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Replace placeholders in the ECS task definition
      - name: Prepare ECS task definition
        run: |
          sed -i "s|<AWS_ACCOUNT_ID>|${{ secrets.AWS_ACCOUNT_ID }}|g" ecs-task-definition.json
          sed -i "s|<AWS_REGION>|${{ secrets.AWS_REGION }}|g" ecs-task-definition.json
          sed -i "s|https://your-s3-bucket-name.s3.amazonaws.com|${{ secrets.S3_BUCKET }}|g" ecs-task-definition.json

      # Build and push the Docker image to Amazon ECR
      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          IMAGE_NAME=poll-position-ui
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY=${IMAGE_NAME}
          docker build -t ${IMAGE_NAME} .
          docker tag ${IMAGE_NAME}:latest ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest

      # Deploy the image to Amazon ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          service: poll-position-ui-service
          cluster: poll-position-ui-cluster
          wait-for-service-stability: true